check()
library(devtools)
check()
version
usethis::use_version()
devtools::check_win_*()
devtools::release()
spell_check()
check()
use_version()
check()
build()
build_manual()
build()
check_rhub()
check_rhub()
document()
check_rhub()
check_rhub()
check_rhub()
getƒ <- function() {
httr::GET("comtrade.un.org")
}
getf()
getƒ()
check_rhub()
url_fetch_memory(url, handle = handle)
curl_fetch_memory(url, handle = handle)
check_rhub()
check_rhub()
check_rhub()
install.packages(‘roxygen2’)
install.packages("roxygen2")
?parallel::makeCluster
install.packages(devtools)
install.packages("devtools")
library(devtools)
build()
?check_built(
path = "C:/Users/Chief/Dropbox/graDiEnt_1.0.1.tar.gz",
cran = TRUE,
remote = FALSE,
incoming = remote,
force_suggests = FALSE,
run_dont_test = FALSE,
manual = FALSE,
args = "--timings",
env_vars = NULL,
check_dir = tempdir(),
quiet = FALSE,
error_on = c("never", "error", "warning", "note")
)
?check_built(
path = "C:/Users/Chief/Dropbox/graDiEnt_1.0.1.tar.gz",
cran = TRUE,
remote = FALSE,
incoming = remote,
force_suggests = FALSE,
run_dont_test = FALSE,
manual = FALSE,
args = "--timings",
env_vars = NULL,
check_dir = tempdir(),
quiet = FALSE,
error_on = c("never", "error", "warning", "note")
)
check_built(
path = "C:/Users/Chief/Dropbox/graDiEnt_1.0.1.tar.gz",
cran = TRUE,
remote = FALSE,
incoming = remote,
force_suggests = FALSE,
run_dont_test = FALSE,
manual = FALSE,
args = "--timings",
env_vars = NULL,
check_dir = tempdir(),
quiet = FALSE,
error_on = c("never", "error", "warning", "note")
)
check("C:/Users/Chief/Dropbox/graDiEnt_1.0.1.tar.gz")
check("C:\Users\Chief\Dropbox\graDiEnt_1.0.1.tar.gz")
check("C:\\Users\\Chief\\Dropbox\\graDiEnt_1.0.1.tar.gz")
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
check_built(
path = "C:/Users/Chief/Dropbox/graDiEnt_1.0.1.tar.gz",
cran = TRUE,
remote = FALSE,
incoming = remote,
force_suggests = FALSE,
run_dont_test = FALSE,
manual = FALSE,
args = "--timings",
env_vars = NULL,
check_dir = tempdir(),
quiet = FALSE,
error_on = c("never", "error", "warning", "note")
)
check_built(
path = "C:/Users/Chief/Dropbox/graDiEnt_1.0.1.tar.gz",
cran = TRUE,
incoming = remote,
force_suggests = FALSE,
run_dont_test = FALSE,
manual = FALSE,
args = "--timings",
env_vars = NULL,
check_dir = tempdir(),
quiet = FALSE,
error_on = c("never", "error", "warning", "note")
)
check_built(
path = "C:/Users/Chief/Dropbox/graDiEnt_1.0.1.tar.gz",
cran = TRUE,
remote = FALSE,
force_suggests = FALSE,
run_dont_test = FALSE,
manual = FALSE,
args = "--timings",
env_vars = NULL,
check_dir = tempdir(),
quiet = FALSE,
error_on = c("never", "error", "warning", "note")
)
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
library(devtools)
build(binary = TRUE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
library(devtools)
build(binary = TRUE)
library(devtools)
build(binary = TRUE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
# create_package.R
# Creates a package,
# must be in package directory,
# open in package Rproject
library(devtools)
build(binary = TRUE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
library(devtools)
build(binary = TRUE)
library(devtools)
build(binary = TRUE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
build(binary = TRUE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
library(devtools)
build(binary = TRUE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
?saveRDS()
library(devtools)
build(binary = TRUE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
?build(binary = TRUE)
library(devtools)
build(binary = FALSE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
library(devtools)
build(binary = FALSE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
# create_package.R
# Creates a package,
# must be in package directory,
# open in package Rproject
library(devtools)
build(binary = FALSE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
# create_package.R
# Creates a package,
# must be in package directory,
# open in package Rproject
library(devtools)
build(binary = FALSE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
library(devtools)
build(binary = FALSE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
?parallel::parLapplyLB
# create_package.R
# Creates a package,
# must be in package directory,
# open in package Rproject
library(devtools)
build(binary = FALSE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
# create_package.R
# Creates a package,
# must be in package directory,
# open in package Rproject
library(devtools)
build(binary = FALSE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
?parallel::parLapply
?parallel::clusterExport
?parallel::clusterEvalQ()
?parallel::clusterExport
?parallel::makePSOCKcluster
# create_package.R
# Creates a package,
# must be in package directory,
# open in package Rproject
library(devtools)
build(binary = FALSE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
?parallel::parLapply
# create_package.R
# Creates a package,
# must be in package directory,
# open in package Rproject
library(devtools)
build(binary = FALSE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
Sys.getenv()
system()
system(g++ --version)
system('g++ --version')
library(devtools)
build(binary = FALSE)
# build()
document()
library(devtools)
build(binary = FALSE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
build(binary = FALSE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
build(binary = FALSE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
list(1:n_params)
list(1:3)
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
build(binary = FALSE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
weights[iter_idx,, drop = FALSE]
weights[1,, drop = FALSE]
weights
arr <- array(dim(10, 1, 1))
arr <- array(dim = c(10, 1, 1))
arr[1,,drop = FALSE]
arr[1,,,drop = FALSE]
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
build(binary = FALSE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
library(devtools)
build(binary = FALSE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
length(rnorm)
as.list(rnorm)
list(rnorm)
tmp <- NULL
tmp <- NULL
length(tmp) == 1
library(devtools)
build(binary = FALSE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
debugonce(GetAlgoParams)
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
dataExample=matrix(rnorm(1000,c(-1,1,0,1),c(1,1,1,1)),ncol=4,byrow = TRUE)
param_names_example=c("mu_1","mu_2","mu_3","mu_4")
#' # Maximum Likelihood Example
#' ##############
#'
#' # simulate from model
#' dataExample=matrix(rnorm(1000,c(-1,1,0,1),c(1,1,1,1)),ncol=4,byrow = TRUE)
#'
#' # list parameter names
#' param_names_example=c("mu_1","mu_2","mu_3","mu_4")
#'
#' # negative log likelihood
ExampleObjFun=function(x,data,param_names){
out=0
names(x) <- param_names
# log likelihoods
out=out+sum(dnorm(data[,1],x["mu_1"],sd=1,log=TRUE))
out=out+sum(dnorm(data[,2],x["mu_2"],sd=1,log=TRUE))
out=out+sum(dnorm(data[,3],x["mu_3"],sd=1,log=TRUE))
out=out+sum(dnorm(data[,4],x["mu_4"],sd=1,log=TRUE))
return(out*-1)
}
########################
# run optimization
out <- optim_SQGDE(ObjFun_list = ExampleObjFun,
control_params = GetAlgoParams(n_params = length(param_names_example),
n_iter = 250,
n_particles = 12,
n_diff = 2,
return_trace = TRUE),
data = dataExample,
param_names = param_names_example)
########################
# run optimization
debugonce(GetAlgoParams)
out <- optim_SQGDE(ObjFun_list = ExampleObjFun,
control_params = GetAlgoParams(n_params = length(param_names_example),
n_iter = 250,
n_particles = 12,
n_diff = 2,
return_trace = TRUE),
data = dataExample,
param_names = param_names_example)
length(param_names_example)
GetAlgoParams(n_params = length(param_names_example),
n_iter = 250,
n_particles = 12,
n_diff = 2,
return_trace = TRUE)
n_params
########################
# run optimization
debugonce(optim_SQGDE)
out <- optim_SQGDE(ObjFun_list = ExampleObjFun,
control_params = GetAlgoParams(n_params = length(param_names_example),
n_iter = 250,
n_particles = 12,
n_diff = 2,
return_trace = TRUE),
data = dataExample,
param_names = param_names_example)
out <- optim_SQGDE(ObjFun_list = ExampleObjFun,
control_params = GetAlgoParams(n_params = length(param_names_example),
n_iter = 250,
n_particles = 12,
n_diff = 2,
return_trace = TRUE),
data = dataExample,
param_names = param_names_example)
library(devtools)
build(binary = FALSE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
library(devtools)
build(binary = FALSE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
library(devtools)
build(binary = FALSE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
library(devtools)
build(binary = FALSE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
library(devtools)
build(binary = FALSE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
library(devtools)
build(binary = FALSE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
library(devtools)
build(binary = FALSE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
library(devtools)
build(binary = FALSE)
# build()
document()
check("C:\\Users\\Chief\\Dropbox\\graDiEnt")
